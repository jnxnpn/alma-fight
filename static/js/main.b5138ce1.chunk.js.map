{"version":3,"sources":["pics/11.png","pics/111.png","pics/9.PNG","pics/1.PNG","pics/2.PNG","pics/3.PNG","pics/4.PNG","pics/5.PNG","pics/10.png","App.js","serviceWorker.js"],"names":["module","exports","__webpack_require__","p","loc","width","window","innerWidth","scrnhgt","innerHeight","pics","P1","P2","P3","P4","P5","iconSize","hitTolerance","deadline","offset","score","ReactDOM","render","react_default","a","createElement","src","BTL","alt","style","maxWidth","position","marginLeft","marginRight","top","document","getElementById","Bullet","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","x","y","tick","bind","assertThisInitialized","addEventListener","handler","setState","_this2","timerID","setInterval","clearInterval","BUL","left","height","Component","Alma","_this3","loca","location","vis","handler3","handler2","AM","maxHeight","parseInt","visibility","App_Bullet","event","keyCode","which","console","log","React","App_Alma","Enemy","_this4","Math","floor","random","pic","abs","temp","_this5","face","unmountComponentAtNode","AMD","App_Enemy","Boolean","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b5138ce1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/11.1d8970b0.png\";","module.exports = __webpack_public_path__ + \"static/media/111.90c551fe.png\";","module.exports = __webpack_public_path__ + \"static/media/9.13862f27.PNG\";","module.exports = __webpack_public_path__ + \"static/media/1.fdaa6759.PNG\";","module.exports = __webpack_public_path__ + \"static/media/2.4443f8ab.PNG\";","module.exports = __webpack_public_path__ + \"static/media/3.284b3d5a.PNG\";","module.exports = __webpack_public_path__ + \"static/media/4.a88117c4.PNG\";","module.exports = __webpack_public_path__ + \"static/media/5.77883b6b.PNG\";","module.exports = __webpack_public_path__ + \"static/media/10.3abb889e.png\";","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport AM from './pics/11.png';\nimport AMD from './pics/111.png';\nimport BUL from './pics/9.PNG';\nimport P1 from './pics/1.PNG';\nimport P2 from './pics/2.PNG';\nimport P3 from './pics/3.PNG';\nimport P4 from './pics/4.PNG';\nimport P5 from './pics/5.PNG';\nimport BTL from './pics/10.png';\n\n\n\n\nvar loc = 50;\nconst stepSize = 10;\nvar clearance = [0,0,0];\nvar i=0;\nconst path = './pics/'\nconst width = window.innerWidth;\nconst scrnhgt = window.innerHeight;\nconst enemySpeed = 15;\nconst pics = [P1,P2,P3,P4,P5];\nconst iconSize = scrnhgt*0.15;\nconst hitTolerance = iconSize/2*0.8;\nconst deadline = scrnhgt - iconSize * 1.1;\nconst offset = -0.4*iconSize;\nvar score = 0;\n\nconst die = () => {\n  ReactDOM.render(<h1>\n    You died (surrendered to the stress culture at <font face = \"Trajan Pro\">Columbia</font>) <br></br>\n    Your GPA is {score} \n    </h1>, document.getElementById('die'));\n  ReactDOM.unmountComponentAtNode(document.getElementById('enemy'));\n  ReactDOM.unmountComponentAtNode(document.getElementById('alma'));\n  ReactDOM.render(<img src={AMD} alt=\"img not available\" style= {{maxWidth: iconSize, maxHeight: iconSize, \n            position: 'fixed',\n  left: loc,\n  top: scrnhgt,}}></img>, document.getElementById('alma'));\n\n}\n\n\nReactDOM.render(<img src={BTL} alt=\"img not available\" style= {{maxWidth: width*0.5,\n  position: 'fixed',\n  marginLeft: 'auto', marginRight: 'auto',\ntop: deadline - width*0.05}}></img>, document.getElementById('but'));\n\n\nclass Bullet extends Component{\n    constructor(props) {\n    super(props);\n    this.state = {x: loc+ offset,\n                 y: 2*iconSize\n                 };\n    this.tick = this.tick.bind(this);\n    document.addEventListener(\"keypress\", this.handler.bind(this), false);\n  }\n\n  handler(){\n    this.setState({x: loc+20});\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      500\n    );\n  }\n\n  //update(){this.setState({x: loc});}\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    //this.setState({y: this.state.y-5});\n  }\n  \n  render(){\n    return (<img src={BUL} style={{\n          position: 'fixed',\n          top: this.state.y,\n          left: this.state.x,\n        }}height = {deadline-iconSize} width = {iconSize} alt=\"image not found\"></img>); \n  }\n}\n\n\n\nclass Alma extends React.Component{\n  constructor (props){\n    super(props);\n    this.state = {loca: props.location,\n    vis: 'hidden',\n  score: score};\n    document.addEventListener(\"keyup\", this.handler3.bind(this), false);\n    document.addEventListener(\"keypress\", this.handler2.bind(this), false);\n    document.addEventListener(\"keydown\", this.handler.bind(this), false);\n\n  }\n\n  render(){\n    return(\n      <div>\n      <div style={{\n          position: 'fixed',\n          left: this.state.loca,\n          top: scrnhgt-iconSize*1.1,\n          } \n      }>\n      <img src={AM} alt=\"img not available\" style= {{maxWidth: iconSize, maxHeight: iconSize}}></img>\n      <p>Location: {parseInt(this.state.loca)} score: {this.state.score}</p>\n      </div>\n      <div style={{\n          visibility: this.state.vis,\n      }}>\n      <Bullet />\n      </div>\n      </div>\n      )\n  }\n  \n  handler(event) {\n  if (event.keyCode === 72 && this.state.loca >= stepSize){\n    loc -= stepSize; \n    this.setState({loca: loc});\n  }\n  else if (event.keyCode === 76 && this.state.loca <1000){\n    loc += stepSize; \n    this.setState({loca: loc});\n    //this.setState({vis: 'visible'});\n  }\n/*  if (event.keyCode === 32) {\n    //this.setState({vis: 'visible'});\n  }else   {\n    this.setState({vis: 'hidden'});\n  }*/\n    //ReactDOM.render(\n     //<Alma location=\"50\"/>,document.getElementById('root'));\n  }\n\n  handler2(event) {\n    if (event.which === 106){\n      this.setState({vis: 'visible', score: score});\n      console.log(event.keyCode,);\n    }\n  }\n\n  handler3(event) {\n    console.log(event.keyCode);\n    if (event.keyCode === 74){\n      this.setState({vis: 'hidden', score: score}); \n\n    }\n  }\n\n\n}\n\nReactDOM.render(<Alma location={loc} />, document.getElementById('alma')\n);\n\n      \nclass Enemy extends React.Component{\n  constructor (props){\n    super(props);\n    this.state = {\n      x: Math.floor(Math.random()*1000+1),\n      y: 0,\n      vis: 'visible',\n      pic: Math.floor(Math.random()*5)\n    };\n    document.addEventListener(\"keypress\", this.handler.bind(this), false);\n    console.log(\"enemy position: \"+ this.state.x+\" and pic# is \"+ this.state.pic);\n    /*\n    for (i = 0; i < 3; i++){\n      if (clearance[i] === 0){\n        clearance[i] = this.state.x;\n      }else{\n        while (Math.abs(this.state.x-clearance[i])<=20)\n          this.setState({\n            x: Math.floor(Math.random()*1000+1)});\n      }\n    }*/\n  }\n   \n\nhandler(event){\n  if (event.keyCode === 106 && Math.abs(loc - (this.state.x+ iconSize*0.06)) <= hitTolerance ){\n    this.setState({vis: 'hidden'});\n    console.log(\"hit\");\n    score ++;\n    var temp = Math.floor(Math.random()*1000+1);\n/*\n    for (i = 0; i < 3; i++){\n      if (clearance[i] === this.state.x){\n        clearance[i] = 0;\n      }\n    }\n    while ((clearance[0]===0||Math.abs(temp-clearance[0])<=20) && (clearance[1]===0||Math.abs(temp-clearance[1])<=20) && (clearance[2]===0||Math.abs(temp-clearance[2])<=20))\n        temp = Math.floor(Math.random()*1000+1);\n    for (i = 0; i < 3; i++){\n          if (clearance[i] === 0){\n            clearance[i] = temp;\n          }\n          break;\n    }*/\n    this.setState ({\n      x: temp,\n      y: 0,\n      vis: 'visible',\n      pic: Math.floor(Math.random()*5)\n    });\n    console.log(\"enemy position: \"+ this.state.x +\" and pic# is \"+ this.state.pic);\n\n  }\n}\n\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.tick(),\n      500\n    );\n  }\n\n  //update(){this.setState({x: loc});}\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n\n  tick() {\n    this.setState({y: this.state.y+enemySpeed});\n    if (this.state.y > deadline)\n      die();\n  }\n\n\n\n  render(){\n    return(\n      <div style={{\n        position: 'fixed',\n        left: this.state.x,\n        top: this.state.y,\n        visibility: this.state.vis\n        }}>\n        <img src= {pics[this.state.pic]} style={{maxHeight: iconSize}}></img>\n      </div>\n    );\n  }\n}\n\n\nReactDOM.render(<div><Enemy /> <Enemy /> <Enemy /></div>, document.getElementById('enemy'));\n\n\n\n\n\n\n\nexport default Alma;\n//export default Enemy;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n"],"sourceRoot":""}